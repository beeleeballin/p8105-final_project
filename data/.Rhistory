) %>%
colorbar(title = "legend bar title") %>%
layout(
title = "graph tile",
geo = g
)
fig
}
df_gen(2013, "NY", "o3_mean_pred")
hi = df_gen(2013, "NY", "o3_mean_pred")
map_gen(hi)
map_gen = function(s_df){
mx = mn = 0
if(input = "pm"){
mx = extreme_value[1]
mn = extreme_value[2]
}
if(input = "oz"){
mx = extreme_value[3]
mn = extreme_value[4]
}
fig =
plot_geo(s_df) %>%
add_trace(
geojson = counties,
locations = ~ countyfips,
z = ~ value,
text = ~ hover,
colorscale = "Viridis",
zmin = mn,
zmax = mx,
marker =
list(
line = list(width = 0)
)
) %>%
colorbar(title = "legend bar title") %>%
layout(
title = "graph tile",
geo = g
)
fig
}
input
hi = df_gen(2013, "NY", "o3_mean_pred")
df_gen(2013, "NY", "o3_mean_pred")
input = "hello"
df_gen(2013, "NY", "o3_mean_pred")
input
map_gen = function(y, s, d){
mx = mn = 0
new_df = tidy_df %>%
filter(year == y, state == s)
if(d == "pm25_mean_pred"){
new_df = rename(new_df, value = pm25_mean_pred)
mx = extreme_value[1]
mn = extreme_value[2]
}
if(d == "o3_mean_pred"){
new_df = rename(new_df, value = o3_mean_pred)
mx = extreme_value[3]
mn = extreme_value[4]
}
select(new_df, countyfips, value, hover)
plot_geo(new_df) %>%
add_trace(
geojson = counties,
locations = ~ countyfips,
z = ~ value,
text = ~ hover,
colorscale = "Viridis",
zmin = mn,
zmax = mx,
marker =
list(
line = list(width = 0)
)
) %>%
colorbar(title = "legend bar title") %>%
layout(
title = "graph tile",
geo = g
)
}
tidy_df =
df %>%
group_by(year, countyfips, county, state) %>%
summarize(across(pm25_max_pred:o3_pop_pred, mean),
across(pm25_max_pred:o3_pop_pred, round, 2)) %>%
ungroup() %>%
mutate(
hover = paste(county, '<br>',
"PM 2.5:", '<br>',
"Average Daily Max", pm25_max_pred, '<br>',
"Average Daily Median", pm25_med_pred, '<br>',
"O3:", '<br>',
"Average Daily Max", o3_max_pred, '<br>',
"Average Daily Median", o3_med_pred),
year = factor(year)
) %>%
rename("PM 2.5" = pm25_mean_pred, "O3" = o3_mean_pred) %>%
select(year, countyfips, county, state, "PM 2.5", O3)
View(tidy_df)
tidy_df =
df %>%
group_by(year, countyfips, county, state) %>%
summarize(across(pm25_max_pred:o3_pop_pred, mean),
across(pm25_max_pred:o3_pop_pred, round, 2)) %>%
ungroup() %>%
mutate(
hover = paste(county, '<br>',
"PM 2.5:", '<br>',
"Average Daily Max", pm25_max_pred, '<br>',
"Average Daily Median", pm25_med_pred, '<br>',
"O3:", '<br>',
"Average Daily Max", o3_max_pred, '<br>',
"Average Daily Median", o3_med_pred),
year = factor(year)
) %>%
rename("PM 2.5" = pm25_mean_pred, "O3" = o3_mean_pred) %>%
select(year, countyfips, county, state, "PM 2.5", O3, hover)
extreme_value =
tidy_df %>%
select(pm25_mean_pred, o3_mean_pred) %>%
summarize(across(c(pm25_mean_pred, o3_mean_pred), c(max, min)))
extreme_value =
tidy_df %>%
select("PM 2.5", O3) %>%
summarize(across(c("PM 2.5", O3), c(max, min)))
tidy_df =
df %>%
group_by(year, countyfips, county, state) %>%
summarize(across(pm25_max_pred:o3_pop_pred, mean),
across(pm25_max_pred:o3_pop_pred, round, 2)) %>%
ungroup() %>%
mutate(
hover = paste(county, '<br>',
"PM 2.5:", '<br>',
"Average Daily Max", pm25_max_pred, '<br>',
"Average Daily Median", pm25_med_pred, '<br>',
"O3:", '<br>',
"Average Daily Max", o3_max_pred, '<br>',
"Average Daily Median", o3_med_pred),
year = factor(year)
) %>%
rename("PM 2.5" = pm25_mean_pred, "O3" = o3_mean_pred) %>%
select(year, countyfips, county, state, `PM 2.5`, O3, hover)
extreme_value =
tidy_df %>%
select(`PM 2.5`, O3) %>%
summarize(across(c(`PM 2.5`, O3), c(max, min)))
map_gen = function(y, s, d){
mx = mn = 0
new_df = tidy_df %>%
filter(year == y, state == s)
if(d == `PM 2.5`){
new_df = rename(new_df, value = `PM 2.5`)
mx = extreme_value[1]
mn = extreme_value[2]
}
if(d == O3){
new_df = rename(new_df, value = O3)
mx = extreme_value[3]
mn = extreme_value[4]
}
select(new_df, countyfips, value, hover)
plot_geo(new_df) %>%
add_trace(
geojson = counties,
locations = ~ countyfips,
z = ~ value,
text = ~ hover,
colorscale = "Viridis",
zmin = mn,
zmax = mx,
marker =
list(
line = list(width = 0)
)
) %>%
colorbar(title = "legend bar title") %>%
layout(
title = "graph tile",
geo = g
)
}
data_choices =
tidy_df %>%
select(`PM 2.5`, O3) %>%
colnames()
selectInput(
"data_choice",
label = h3("Select Data"),
choices = data_choices,
selected = "PM 2.5"
)
data_choices =
tidy_df %>%
select(PM2.5, O3) %>%
colnames()
extreme_value =
tidy_df %>%
select(PM2.5, O3) %>%
summarize(across(c(PM2.5, O3), c(max, min)))
tidy_df =
df %>%
group_by(year, countyfips, county, state) %>%
summarize(across(pm25_max_pred:o3_pop_pred, mean),
across(pm25_max_pred:o3_pop_pred, round, 2)) %>%
ungroup() %>%
mutate(
hover = paste(county, '<br>',
"PM 2.5:", '<br>',
"Average Daily Max", pm25_max_pred, '<br>',
"Average Daily Median", pm25_med_pred, '<br>',
"O3:", '<br>',
"Average Daily Max", o3_max_pred, '<br>',
"Average Daily Median", o3_med_pred),
year = factor(year)
) %>%
rename("PM2.5" = pm25_mean_pred, "O3" = o3_mean_pred) %>%
select(year, countyfips, county, state, PM2.5, O3, hover)
extreme_value =
tidy_df %>%
select(PM2.5, O3) %>%
summarize(across(c(PM2.5, O3), c(max, min)))
map_gen = function(y, s, d){
mx = mn = 0
new_df = tidy_df %>%
filter(year == y, state == s)
if(d == PM2.5){
new_df = rename(new_df, value = PM2.5)
mx = extreme_value[1]
mn = extreme_value[2]
}
if(d == O3){
new_df = rename(new_df, value = O3)
mx = extreme_value[3]
mn = extreme_value[4]
}
select(new_df, countyfips, value, hover)
plot_geo(new_df) %>%
add_trace(
geojson = counties,
locations = ~ countyfips,
z = ~ value,
text = ~ hover,
colorscale = "Viridis",
zmin = mn,
zmax = mx,
marker =
list(
line = list(width = 0)
)
) %>%
colorbar(title = "legend bar title") %>%
layout(
title = "graph tile",
geo = g
)
}
state_choices =
tidy_df %>%
distinct(state) %>%
pull()
data_choices =
tidy_df %>%
select(PM2.5, O3) %>%
colnames()
selectInput(
"state_choice",
label = h3("Select State"),
choices = state_choices,
selected = "NY"
)
sliderInput(
"year_choice",
label = h3("Select Year"),
min = 2001,
max = 2016,
value = 2001
)
selectInput(
"data_choice",
label = h3("Select Data"),
choices = data_choices,
selected = PM2.5
)
mx
mn
mx = extreme_value[1]
mx
mn
mx
mx = pull(extreme_value, 1)
mx
tidy_pm_df =
df %>%
select(-contains(o3)) %>%
group_by(year, countyfips, county, state) %>%
summarize(across(pm25_max_pred:pm25_mean_pred, mean),
across(pm25_max_pred:pm25_mean_pred, round, 2))
tidy_pm_df =
df %>%
select(-contains('o3')) %>%
group_by(year, countyfips, county, state) %>%
summarize(across(pm25_max_pred:pm25_mean_pred, mean),
across(pm25_max_pred:pm25_mean_pred, round, 2))
View(tidy_pm_df)
tidy_pm_df =
df %>%
select(-contains('o3')) %>%
group_by(year, countyfips, county, state) %>%
summarize(across(pm25_max_pred:pm25_mean_pred, mean),
across(pm25_max_pred:pm25_mean_pred, round, 2)) %>%
ungroup() %>%
mutate(
hover = paste(county, '<br>',
"PM 2.5:", '<br>',
"Average Daily Max", pm25_max_pred, '<br>',
"Average Daily Median", pm25_med_pred, '<br>'),
# "O3:", '<br>',
# "Average Daily Max", o3_max_pred, '<br>',
# "Average Daily Median", o3_med_pred),
year = factor(year)
) %>%
rename("PM2.5" = pm25_mean_pred) %>%
select(year, countyfips, county, state, PM2.5, hover)
tidy_oz_df =
df %>%
select(-contains('pm25')) %>%
group_by(year, countyfips, county, state) %>%
summarize(across(o3_max_pred:o3_mean_pred, mean),
across(o3_max_pred:o3_mean_pred, round, 2)) %>%
ungroup() %>%
mutate(
hover = paste(county, '<br>',
"Average Daily Max", o3_max_pred, '<br>',
"Average Daily Median", o3_med_pred),
year = factor(year)
) %>%
rename("O3" = o3_mean_pred) %>%
select(year, countyfips, county, state, O3, hover)
View(tidy_oz_df)
tidy_pm_df =
df %>%
select(-contains('o3')) %>%
group_by(year, countyfips, county, state) %>%
summarize(across(pm25_max_pred:pm25_mean_pred, mean),
across(pm25_max_pred:pm25_mean_pred, round, 2)) %>%
ungroup() %>%
mutate(
hover = paste(county, '<br>',
"Average Daily Max", pm25_max_pred, '<br>',
"Average Daily Median", pm25_med_pred, '<br>'),
year = factor(year)
) %>%
rename("PM2.5" = pm25_mean_pred) %>%
select(year, countyfips, county, state, PM2.5, hover)
extreme_value =
col_bind(
select(tidy_pm_df, PM2.5)
) %>%
col_bind(
select(tidy_pm_df, O3)
) %>%
summarize(across(c(PM2.5, O3), c(max, min)))
extreme_value =
bind_cols(
select(tidy_pm_df, PM2.5)
) %>%
bind_cols(
select(tidy_pm_df, O3)
) %>%
summarize(across(c(PM2.5, O3), c(max, min)))
extreme_value =
bind_cols(
select(tidy_pm_df, PM2.5)
) %>%
bind_cols(
select(tidy_pm_df, O3)
) %>%
summarize(across(c(PM2.5, O3), c(max, min)))
extreme_value =
bind_cols(
select(tidy_pm_df, PM2.5)
) %>%
bind_cols(
select(tidy_oz_df, O3)
) %>%
summarize(across(c(PM2.5, O3), c(max, min)))
View(extreme_value)
getwd()
setwd(~/Desktop/Columbia/Fall_2021/P8105-Data_Science/p8105-final_project/data/)
setwd("~/Desktop/Columbia/Fall_2021/P8105-Data_Science/p8105-final_project/data/")
getwd()
tidy_pm_df =
df %>%
select(-contains('o3')) %>%
group_by(year, countyfips, county, state) %>%
summarize(across(pm25_max_pred:pm25_mean_pred, mean),
across(pm25_max_pred:pm25_mean_pred, round, 2)) %>%
ungroup() %>%
mutate(
hover = paste(county, '<br>',
"Average Daily Max", pm25_max_pred, '<br>',
"Average Daily Median", pm25_med_pred, '<br>'),
year = factor(year)
) %>%
rename("PM2.5" = pm25_mean_pred) %>%
select(year, countyfips, county, state, PM2.5, hover)
tidy_oz_df =
df %>%
select(-contains('pm25')) %>%
group_by(year, countyfips, county, state) %>%
summarize(across(o3_max_pred:o3_mean_pred, mean),
across(o3_max_pred:o3_mean_pred, round, 2)) %>%
ungroup() %>%
mutate(
hover = paste(county, '<br>',
"Average Daily Max", o3_max_pred, '<br>',
"Average Daily Median", o3_med_pred),
year = factor(year)
) %>%
rename("O3" = o3_mean_pred) %>%
select(year, countyfips, county, state, O3, hover)
write_csv(tidy_pm_df,"./pm25.csv")
write_csv(tidy_oz_df,"./o3.csv")
write_csv(tidy_pm_df,"./daily_ap/pm25.csv")
write_csv(tidy_oz_df,"./daily_ap/o3.csv")
write_csv(extreme_value,"./daily_ap/extreme_value.csv")
getwd()
tidy_pm_df = read_csv("./daily_ap/pm25.csv")
extreme_value = read_csv("./daily_ap/extreme_value.csv")
tidy_pm_df = read_csv("./daily_ap/pm25.csv")
tidy_oz_df = read_csv("./daily_ap/o3.csv")
extreme_value = read_csv("./daily_ap/extreme_value.csv")
View(tidy_oz_df)
getwd()
setwd("~/Desktop/Columbia/Fall_2021/P8105-Data_Science/p8105-final_project/data/")
rm(list=ls())
tidy_pm_df = read_csv("~/Desktop/Columbia/Fall_2021/P8105-Data_Science/p8105-final_project/data/daily_ap/pm25.csv")
tidy_oz_df = read_csv("~/Desktop/Columbia/Fall_2021/P8105-Data_Science/p8105-final_project/data/daily_ap/o3.csv")
extreme_value = read_csv("~/Desktop/Columbia/Fall_2021/P8105-Data_Science/p8105-final_project/data/daily_ap/extreme_value.csv")
url1 = 'https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json'
counties = rjson::fromJSON(file = url1)
g = list(
visible = FALSE,
fitbounds = "locations"
)
map_gen = function(y, s, d){
mx = mn = 0
plot_title = ""
if(d == "PM2.5"){
new_df = rename(tidy_pm_df, value = PM2.5)
mx = pull(extreme_value, 1)
mn = pull(extreme_value, 2)
plot_title = "Average Daily PM 2.5 Level"
}
if(d == "O3"){
new_df = rename(tidy_oz_df, value = O3)
mx = pull(extreme_value, 3)
mn = pull(extreme_value, 4)
plot_title = "Average Daily O3 Level"
}
new_df %>%
filter(year == y, state == s) %>%
select(countyfips, value, hover) %>%
plot_geo() %>%
add_trace(
geojson = counties,
locations = ~ countyfips,
z = ~ value,
text = ~ hover,
colorscale = "Viridis",
zmin = mn,
zmax = mx,
marker =
list(
line = list(width = 0)
)
) %>%
colorbar(title = "") %>%
layout(
title = plot_title,
geo = g
)
}
year_choices = c(2001:2016)
state_choices = c("NY", "OH", "ME", "PA")
data_choices = c("PM2.5", "O3")
selectInput(
"year_choice",
label = h3("Select Year"),
choices = year_choices,
selected = "2001"
)
selectInput(
"state_choice",
label = h3("Select State"),
choices = state_choices,
selected = "NY"
)
selectInput(
"data_choice",
label = h3("Select Data"),
choices = data_choices,
selected = "PM2.5"
)
renderPlotly({
map_gen(input[["year_choice"]], input[["state_choice"]], input[["data_choice"]])
})
